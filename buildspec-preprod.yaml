version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16
      python: 3.12
  build:
    commands:
      - echo Build started on `date`
      - npm install
      - npm run prisma generate
      - npm run build
      - VERSION=$(cat package.json | python3 -c "import sys, json; print(json.load(sys.stdin)['version'])")
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Druid123! > .docker.key
      - docker login -u dinizsantosdruid --password-stdin < .docker.key
      - rm .docker.key
      - docker build --build-arg RELEASE_TYPE=preprod -t nfce:preprod-$VERSION .
      - docker tag nfce:preprod-$VERSION 038444195057.dkr.ecr.sa-east-1.amazonaws.com/bubbe/nfce:preprod-$VERSION
      - echo Checking if we are using version $VERSION
      - OK=$(git describe --exact-match --tags | grep $VERSION | wc -l)
      - |
        if [ "$OK" = "0" ] ; then
          echo Tag $VERSION inexistente
          exit 1
        fi
      - aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin 038444195057.dkr.ecr.sa-east-1.amazonaws.com
      - docker push 038444195057.dkr.ecr.sa-east-1.amazonaws.com/bubbe/nfce:preprod-$VERSION
      - >
        aws cloudformation update-stack --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_IAM CAPABILITY_NAMED_IAM 
        --stack-name=bubbe-nfce-preprod --template-body file://./template.yaml 
        --parameters ParameterKey=Image,ParameterValue=038444195057.dkr.ecr.sa-east-1.amazonaws.com/bubbe/nfce:preprod-$VERSION 
        ParameterKey=FullServiceName,ParameterValue=nfce-preprod 
        ParameterKey=ServiceName,ParameterValue=nfce-preprod 
        ParameterKey=Subdomain,ParameterValue=nfce-preprod 
  post_build:
    commands:
      - echo Build completed on `date`